"""
Первый шаг при постороении дерева синтаксического разбора -
это разбить строку выражения на список токенов. 
Их насчитывается четыре вида: левая скобка, правая скобка, оператор и операнд.

Прочитанная левая скобка всегда означает начало нового выражения и, 
следовательно, необходимо создать связанное с ним поддерево. 
И наоборот, считывание правой скобки сигнализирует о завершении выражения. 
Операнды будут листьями и потомками своих операторов. 
Каждый оператор имеет обоих своих потомков.

Используя сказанную выше информацию, определим следующие правила:

1) Если считан токен '(' - добавляем новый узел, как левого потомка текущего,
    и спускаемся к нему вниз.
2) Если считанный один из элементов списка ['+','-','/','*'], то устанавливаем
    корневое значение текущего узла равным оператору из этого токена.
    Добавляем новый узел на место правого потомка текущего и
    спускаемся вниз по правому поддереву.
3) Если считанный токен - число, то устанавливаем корневое значение равным
    этой величине и возвращаемся к родителю.
4) Если считан токен ')', то перемещаемся к родителю текущего узла.


Выражение: ( 3 + ( 4 ∗ 5 ) )
['(', '3', '+', '(', '4', '*', '5' ,')',')']

а) Создаём пустое дерево.

б) Читаем '(' в качестве первого токена.
    По правилу 1 создаём новый узел, как левого потомка корня.
    Делаем его текущим.

в) Считываем следующий токен - '3'.
    По правилу 3 устанавливаем значение текущего узла в 3 и
    перемещаемся обратно к его родителю.

г) Следующим считываем '+'.
    По правилу 2 устанавливаем корневое значение текущего узла в '+' и
    добавляем ему правого потомка. Этот новый узел становится текущим.

д) Считываем '('.
    По правилу 1 создаём для текущего узла левого потомка.
    Этот новый узел становится текущим.

е) Считываем '4'.
    По правилу 3 устанавливаем значение текущего узла равным 4.
    Делаем текущим родителя 4.

ж) Считываем следующий токен - '*'.
    По правилу 2 устанавливаем корневое значение текущего узла равным '*'
    и создаём его правого потомка. Он становится текущим.

з) Считываем '5'.
    По правилу 3 устанавливаем корневое значение текущего узла в '5',
    после чего текущим становится его родитель.

и) Считываем ')'.
    По правилу 4 делаем текущим узлом родителя '*'.

к) Считываем последний токен - ')'.
    По правилу 4 мы должны сделать текущим родителя '+'.
    Но такого узла не существует, следовательно, мы закончили.
"""